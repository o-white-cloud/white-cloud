name: nodejs white-cloud-ui

on:
  push:
    branches: [ trunk ]
    paths: white-cloud-ui/**
jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: /home/runner/work/white-cloud/white-cloud/white-cloud-ui
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: white-cloud
        UI_IMAGE_TAG: ui-${{ github.sha }}
        NGINX_IMAGE_TAG: nginx-${{ github.sha }}
      run: |
        docker build -f ./Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$UI_IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$UI_IMAGE_TAG
        docker build -f ./nginx/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$NGINX_IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$NGINX_IMAGE_TAG

